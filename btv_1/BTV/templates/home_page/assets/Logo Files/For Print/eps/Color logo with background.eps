%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2306 246
%%HiResBoundingBox: 0 0 2305.9199 246
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2305.9199 246 re
W
q
[0.24 0 0 -0.24 0 246] cm
q
0 0 9608.333 1021.76422 re
W*
q
[3.124868 0 0 3.122706 0.0107784 0] cm
/DeviceRGB {} CS
[0.9765 0.9765 0.9765] SC
/DeviceRGB {} cs
[0.9765 0.9765 0.9765] sc
0 0 3074.7896 327.20474 re
f
Q
q
[13.632957 0 0 13.623524 54.902901 -221.24409] cm
/DeviceRGB {} CS
[0.0667 0.2275 0.3647] SC
/DeviceRGB {} cs
[0.0667 0.2275 0.3647] sc
9.206 74.055 m
99.883003 74.055 l
99.883003 33.946999 l
9.206 33.946999 l
9.206 74.055 l
h
54.546001 35.181999 m
64.939003 35.181999 73.363998 43.606998 73.363998 54 c
73.363998 64.397003 64.938995 72.821999 54.545998 72.821999 c
44.149998 72.821999 35.724998 64.396996 35.724998 54 c
35.724998 43.605999 44.150002 35.181999 54.546001 35.181999 c
h
f
4.545 29.097 m
4.545 78.904999 l
104.544998 78.904999 l
104.544998 29.097 l
4.545 29.097 l
h
102.741997 75.483002 m
102.741997 76.274002 102.101997 76.912003 101.312996 76.912003 c
7.777 76.912003 l
6.986 76.912003 6.348 76.274002 6.348 75.483002 c
6.348 32.519001 l
6.348 31.729 6.986 31.09 7.777 31.09 c
101.314003 31.09 l
102.103004 31.09 102.743004 31.729 102.743004 32.519001 c
102.743004 75.483002 l
102.741997 75.483002 l
h
f
48.549 56.616001 m
47.507999 56.616001 46.848999 57.248001 46.848999 58.342003 c
46.848999 60.505005 49.151001 63.272003 53.778999 63.383003 c
53.778999 65.080002 l
53.778999 65.546005 54.132999 66.011002 54.598999 66.011002 c
55.064999 66.011002 55.422001 65.546005 55.422001 65.080002 c
55.422001 63.383003 l
59.503002 63.135002 62.240002 61.273003 62.240002 57.603004 c
62.240002 53.386005 59.036003 52.317005 55.422001 51.553005 c
55.422001 46.347004 l
58.462002 46.403004 58.434002 49.333004 60.214001 49.333004 c
61.144001 49.333004 61.938999 48.703003 61.938999 47.634003 c
61.938999 44.952003 57.557999 43.610001 55.421997 43.553001 c
55.421997 42.926003 l
55.421997 42.460003 55.064999 41.993004 54.598995 41.993004 c
54.133995 41.993004 53.778996 42.460003 53.778996 42.926003 c
53.778996 43.553001 l
50.354996 43.664001 47.258995 45.579002 47.258995 49.304001 c
47.258995 52.344002 49.725994 54.124001 53.778996 54.864002 c
53.778996 60.588001 l
49.231998 60.396 51.615002 56.616001 48.549 56.616001 c
h
55.422001 55.166 m
56.900002 55.496002 58.790001 56.042999 58.790001 57.903 c
58.790001 59.711998 57.063 60.477001 55.422001 60.589001 c
55.422001 55.166 l
h
50.710999 48.674999 m
50.710999 47.496998 51.917 46.403 53.778 46.347 c
53.778 51.250999 l
51.723999 50.838001 50.710999 50.043999 50.710999 48.674999 c
h
f
Q
q
[26.29213 0 0 26.273939 9465.1768 116.773056] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
-268 0 3 30 re
f
Q
q
[12.51419 0 0 12.505531 3890.4951 345.0997] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
6.7 8.98 m
6.72 10.459999 l
6.72 20 l
6.266666 20.08 5.726667 20.120001 5.1 20.120001 c
4.473333 20.120001 3.946666 20.08 3.52 20 c
3.52 8.98 l
2.24 9 l
0.18 9 l
0.1 8.613334 0.06 8.17 0.06 7.67 c
0.06 7.17 0.1 6.726667 0.18 6.34 c
10.08 6.34 l
10.186667 6.686667 10.24 7.106667 10.24 7.6 c
10.24 8.093333 10.106667 8.45 9.84 8.67 c
9.573334 8.89 9.146668 9 8.56 9 c
7.980001 9 l
6.72 8.98 l
6.7 8.98 l
6.7 8.98 l
h
21.52 10.56 m
21.52 11 21.453333 11.416667 21.32 11.81 c
21.186666 12.203334 21.009998 12.556667 20.789999 12.870001 c
20.57 13.183334 20.309999 13.456668 20.009998 13.690001 c
19.709997 13.923333 19.399998 14.1 19.079998 14.22 c
19.773333 14.473333 20.286665 15.086667 20.619999 16.06 c
21.219999 17.76 l
21.446667 18.426666 21.779999 18.92 22.219999 19.24 c
22.02 19.506666 21.719999 19.73 21.32 19.91 c
20.92 20.09 20.48 20.18 20 20.18 c
19.52 20.18 19.146667 20.043333 18.879999 19.77 c
18.613331 19.496668 18.366665 19.02 18.139999 18.34 c
17.42 16.24 l
17.273335 15.839999 17.076668 15.533333 16.83 15.32 c
16.583332 15.106667 16.213333 15 15.72 15 c
14.900001 15 l
14.900001 20 l
14.473333 20.08 13.940001 20.120001 13.3 20.120001 c
12.66 20.120001 12.133333 20.08 11.72 20 c
11.72 6.44 l
11.860001 6.3 l
13.020001 6.273333 13.996667 6.253333 14.790001 6.24 c
15.583335 6.226667 16.206669 6.22 16.660002 6.22 c
17.393335 6.22 18.060001 6.31 18.660002 6.49 c
19.260002 6.67 19.770002 6.94 20.190002 7.3 c
20.610003 7.66 20.93667 8.113333 21.170002 8.66 c
21.403334 9.206666 21.52 9.839999 21.520002 10.56 c
21.52 10.56 l
h
14.9 8.62 m
14.9 12.54 l
15.499999 12.54 16.013332 12.53 16.439999 12.51 c
16.866665 12.490001 17.209999 12.410001 17.469999 12.270001 c
17.73 12.13 17.926666 11.933333 18.059999 11.68 c
18.193333 11.426667 18.259998 11.06 18.26 10.58 c
18.26 9.286666 17.633333 8.639999 16.380001 8.639999 c
15.550001 8.639999 l
15.550001 8.639999 15.333335 8.633332 14.900002 8.619999 c
14.9 8.62 l
h
27.34 17.139999 m
26.98 17.139999 26.713333 17.133333 26.540001 17.119999 c
25.68 20.019999 l
25.360001 20.099998 24.913334 20.139999 24.34 20.139999 c
23.700001 20.139999 23.18 20.066666 22.780001 19.92 c
22.68 19.76 l
27.08 6.34 l
27.6 6.26 28.206667 6.22 28.9 6.22 c
29.686666 6.22 30.313334 6.266667 30.779999 6.36 c
35.099998 19.799999 l
34.633331 20.053331 34.106663 20.179998 33.519997 20.179998 c
32.826664 20.179998 32.339996 20.059998 32.059998 19.819998 c
31.779999 19.579998 31.539999 19.119997 31.339998 18.439999 c
30.959999 17.119999 l
30.786665 17.133333 30.526665 17.139999 30.179998 17.139999 c
27.339998 17.139999 l
27.34 17.139999 l
h
27.280001 14.62 m
28.08 14.599999 l
29.540001 14.599999 l
29.606668 14.599999 29.723335 14.603333 29.890001 14.61 c
30.056667 14.616667 30.180002 14.62 30.260002 14.62 c
29.920002 13.38 l
29.600002 12.26 29.233335 10.886666 28.820002 9.26 c
28.700001 9.26 l
28.593334 9.833333 28.273335 11.106667 27.740002 13.08 c
27.280001 14.62 l
h
45.619999 19.120001 m
45.193333 19.466667 44.633331 19.720001 43.939999 19.880001 c
43.246666 20.040001 42.48 20.120001 41.639999 20.120001 c
41.226665 20.120001 40.630001 20.113335 39.849998 20.1 c
39.069996 20.086666 38.09333 20.066668 36.919998 20.040001 c
36.779999 19.900002 l
36.779999 6.440002 l
36.919998 6.300002 l
37.693333 6.273335 38.496666 6.253335 39.329998 6.240002 c
40.16333 6.226668 41.039997 6.220002 41.959999 6.220002 c
43.093334 6.220002 44.040001 6.400002 44.799999 6.760002 c
45.559998 7.120002 46.166664 7.613335 46.619999 8.240002 c
47.073334 8.866669 47.393333 9.603335 47.579998 10.450002 c
47.766663 11.296668 47.859997 12.206668 47.859997 13.180002 c
47.859997 14.513335 47.706665 15.666669 47.399998 16.640003 c
47.09333 17.613337 46.5 18.440004 45.619999 19.120003 c
45.619999 19.120001 l
h
41.939999 17.620001 m
43.699997 17.620001 44.579998 16.140001 44.579998 13.18 c
44.579998 10.206667 43.699997 8.72 41.939999 8.72 c
40.809998 8.72 l
40.809998 8.72 40.526665 8.713333 39.959999 8.7 c
39.959999 17.639999 l
40.200001 17.626665 40.483334 17.619999 40.809998 17.619999 c
41.939999 17.619999 l
41.939999 17.620001 l
h
53.259998 15.96 m
53.239998 17.4 l
53.239998 17.42 l
53.853329 17.393333 54.346664 17.379999 54.719997 17.379999 c
59.359997 17.379999 l
59.359997 17.873333 59.339996 18.253332 59.299995 18.519999 c
59.139996 19.546665 58.459995 20.059998 57.259995 20.059998 c
51.939995 20.059998 l
51.366661 20.059998 50.91666 19.893332 50.589996 19.559998 c
50.263332 19.226664 50.099998 18.773331 50.099995 18.199997 c
50.099995 6.479997 l
50.239994 6.339997 l
58.859993 6.339997 l
58.939991 6.726664 58.979992 7.146663 58.979992 7.599997 c
58.979992 8.05333 58.886658 8.526664 58.699993 9.019997 c
53.239994 9.019997 l
53.259995 10.459997 l
53.259995 11.859997 l
53.606663 11.846664 54.059994 11.839996 54.619995 11.839996 c
57.679996 11.839996 l
57.799995 12.21333 57.859997 12.639997 57.859997 13.119996 c
57.859997 13.599996 57.799995 14.039995 57.679996 14.439996 c
53.259995 14.439996 l
53.259995 15.959995 l
53.259998 15.96 l
h
68.519997 11.78 m
68.519997 11.54 l
68.519997 9.566667 67.786667 8.58 66.32 8.58 c
65.479996 8.58 64.873329 8.963333 64.5 9.73 c
64.126671 10.496666 63.940002 11.626666 63.939999 13.12 c
63.939999 14.6 64.173332 15.7 64.639999 16.42 c
65.106667 17.139999 65.786667 17.5 66.68 17.5 c
67.146667 17.5 67.66333 17.389999 68.230003 17.17 c
68.796677 16.950001 69.413338 16.6 70.080002 16.120001 c
70.413338 16.346668 70.723335 16.656668 71.010002 17.050001 c
71.296669 17.443335 71.473335 17.820002 71.540001 18.18 c
71.233337 18.473333 70.876671 18.75 70.470001 19.01 c
70.063332 19.27 69.623337 19.493334 69.150002 19.68 c
68.676666 19.866667 68.183334 20.016668 67.669998 20.130001 c
67.156662 20.243334 66.639992 20.300001 66.119995 20.300001 c
65.09333 20.300001 64.226662 20.103334 63.519997 19.710001 c
62.813332 19.316668 62.243332 18.793335 61.809998 18.140001 c
61.376663 17.486668 61.063332 16.733335 60.869999 15.880001 c
60.676666 15.026668 60.580002 14.14 60.579998 13.220001 c
60.579998 12.020001 60.73 10.970001 61.029999 10.070002 c
61.329998 9.170002 61.736668 8.420002 62.25 7.820002 c
62.763332 7.220001 63.366665 6.770001 64.059998 6.470002 c
64.753326 6.170002 65.493324 6.020002 66.279999 6.020002 c
67.079994 6.020002 67.806664 6.126669 68.459999 6.340002 c
69.113335 6.553336 69.669998 6.846669 70.129997 7.220002 c
70.589996 7.593336 70.943329 8.033336 71.189995 8.540002 c
71.436661 9.046668 71.559998 9.593335 71.559998 10.180002 c
71.559998 11.366669 70.953331 11.960002 69.739998 11.960002 c
69.379997 11.960002 68.973328 11.900002 68.519997 11.780002 c
68.519997 11.78 l
h
83.360001 10.56 m
83.360001 11 83.293335 11.416667 83.160004 11.81 c
83.026672 12.203334 82.850006 12.556667 82.630005 12.870001 c
82.410004 13.183334 82.150002 13.456668 81.850006 13.690001 c
81.550011 13.923333 81.240005 14.1 80.920006 14.22 c
81.613342 14.473333 82.126671 15.086667 82.460007 16.06 c
83.060005 17.76 l
83.286667 18.426666 83.620003 18.92 84.060005 19.24 c
83.860001 19.506666 83.560005 19.73 83.160004 19.91 c
82.760002 20.09 82.320007 20.18 81.840004 20.18 c
81.360001 20.18 80.986671 20.043333 80.720001 19.77 c
80.453331 19.496668 80.206665 19.02 79.980003 18.34 c
79.260002 16.24 l
79.113335 15.839999 78.916672 15.533333 78.670006 15.32 c
78.42334 15.106667 78.053345 15 77.560005 15 c
76.740005 15 l
76.740005 20 l
76.313339 20.08 75.780006 20.120001 75.140007 20.120001 c
74.500008 20.120001 73.973343 20.08 73.560005 20 c
73.560005 6.44 l
73.700005 6.3 l
74.860001 6.273333 75.83667 6.253333 76.630005 6.24 c
77.42334 6.226667 78.046677 6.22 78.500008 6.22 c
79.233337 6.22 79.900009 6.31 80.500008 6.49 c
81.100006 6.67 81.610008 6.94 82.030006 7.3 c
82.450005 7.66 82.776672 8.113333 83.01001 8.66 c
83.243347 9.206666 83.360016 9.839999 83.360008 10.56 c
83.360001 10.56 l
h
76.739998 8.62 m
76.739998 12.54 l
77.339996 12.54 77.853333 12.53 78.279999 12.51 c
78.706665 12.490001 79.049995 12.410001 79.309998 12.270001 c
79.57 12.13 79.766663 11.933333 79.899994 11.68 c
80.033325 11.426667 80.099991 11.06 80.099991 10.58 c
80.099991 9.286666 79.473328 8.639999 78.219994 8.639999 c
77.389992 8.639999 l
77.389992 8.639999 77.173325 8.633332 76.73999 8.619999 c
76.739998 8.62 l
h
89.18 17.139999 m
88.82 17.139999 88.553329 17.133333 88.379997 17.119999 c
87.519997 20.019999 l
87.199997 20.099998 86.753326 20.139999 86.18 20.139999 c
85.540001 20.139999 85.020004 20.066666 84.620003 19.92 c
84.520004 19.76 l
88.920006 6.34 l
89.440002 6.26 90.046669 6.22 90.740005 6.22 c
91.526672 6.22 92.153336 6.266667 92.620003 6.36 c
96.940002 19.799999 l
96.473335 20.053331 95.946671 20.179998 95.360001 20.179998 c
94.666664 20.179998 94.18 20.059998 93.900002 19.819998 c
93.620003 19.579998 93.380005 19.119997 93.18 18.439999 c
92.800003 17.119999 l
92.626671 17.133333 92.366669 17.139999 92.020004 17.139999 c
89.180008 17.139999 l
89.18 17.139999 l
h
89.120003 14.62 m
89.920006 14.599999 l
91.380005 14.599999 l
91.446671 14.599999 91.563339 14.603333 91.730003 14.61 c
91.896667 14.616667 92.020004 14.62 92.100006 14.62 c
91.76001 13.38 l
91.44001 12.26 91.073341 10.886666 90.660011 9.26 c
90.540009 9.26 l
90.433342 9.833333 90.113342 11.106667 89.580009 13.08 c
89.120003 14.62 l
h
101.800003 9.06 m
101.82 10.620001 l
101.82 11.880001 l
106.099998 11.880001 l
106.206665 12.280002 106.260002 12.716668 106.260002 13.190001 c
106.260002 13.663333 106.206665 14.099999 106.099998 14.5 c
101.82 14.5 l
101.82 20 l
101.393333 20.08 100.860001 20.120001 100.220001 20.120001 c
99.580002 20.120001 99.046669 20.08 98.620003 20 c
98.620003 6.46 l
98.760002 6.34 l
107.32 6.34 l
107.400002 6.673334 107.440002 7.09 107.440002 7.59 c
107.440002 8.09 107.303337 8.46 107.029999 8.7 c
106.75666 8.94 106.32666 9.06 105.739998 9.06 c
101.799995 9.06 l
101.800003 9.06 l
h
114.5 8.98 m
114.519997 10.459999 l
114.519997 20 l
114.066666 20.08 113.526665 20.120001 112.899994 20.120001 c
112.273323 20.120001 111.746658 20.08 111.319992 20 c
111.319992 8.98 l
110.039993 9 l
107.979996 9 l
107.899994 8.613334 107.859993 8.17 107.859993 7.67 c
107.859993 7.17 107.899994 6.726667 107.979996 6.34 c
117.879997 6.34 l
117.986664 6.686667 118.040001 7.106667 118.040001 7.6 c
118.040001 8.093333 117.90667 8.45 117.639999 8.67 c
117.373329 8.89 116.946663 9 116.360001 9 c
115.779999 9 l
114.519997 8.98 l
114.5 8.98 l
h
128.740005 17.32 m
131.360001 6.34 l
131.679993 6.26 132.093338 6.22 132.600006 6.22 c
133.293335 6.22 133.839996 6.293334 134.240005 6.44 c
134.360001 6.6 l
130.619995 20 l
129.860001 20.08 129.096664 20.120001 128.330002 20.120001 c
127.563339 20.120001 127.010002 20.023335 126.669998 19.83 c
126.329994 19.636665 126.073326 19.253332 125.900002 18.68 c
122.580002 6.62 l
123.300003 6.313333 123.893333 6.16 124.360001 6.16 c
124.919998 6.16 125.333328 6.286666 125.599998 6.54 c
125.866669 6.793334 126.073334 7.193333 126.220001 7.74 c
127.760002 13.44 l
128 14.333333 128.253326 15.546666 128.520004 17.08 c
128.546661 17.24 128.619995 17.32 128.740005 17.32 c
h
139.179993 15.96 m
139.159988 17.4 l
139.159988 17.42 l
139.773315 17.393333 140.266647 17.379999 140.639984 17.379999 c
145.279984 17.379999 l
145.279984 17.873333 145.259979 18.253332 145.219986 18.519999 c
145.059982 19.546665 144.37999 20.059998 143.179993 20.059998 c
137.859985 20.059998 l
137.286652 20.059998 136.836655 19.893332 136.509979 19.559998 c
136.183304 19.226664 136.019974 18.773331 136.019974 18.199997 c
136.019974 6.479997 l
136.159973 6.339997 l
144.779968 6.339997 l
144.85997 6.726664 144.899963 7.146663 144.899963 7.599997 c
144.899963 8.05333 144.806625 8.526664 144.619965 9.019997 c
139.159958 9.019997 l
139.179962 10.459997 l
139.179962 11.859997 l
139.526627 11.846664 139.979965 11.839996 140.539963 11.839996 c
143.59996 11.839996 l
143.719955 12.21333 143.779953 12.639997 143.779953 13.119996 c
143.779953 13.599996 143.719955 14.039995 143.59996 14.439996 c
139.179962 14.439996 l
139.179962 15.959995 l
139.179993 15.96 l
h
158.259995 6.2 m
158.399994 6.34 l
158.399994 19.940001 l
157.866653 20.060001 157.236664 20.120001 156.509995 20.120001 c
155.783325 20.120001 155.139999 20.08 154.580002 20 c
151.440002 12.84 l
151.066666 12.026667 150.686676 11.086667 150.300003 10.020001 c
150.240005 10.040001 l
150.400009 11.986668 150.480011 13.980001 150.480011 16.02 c
150.480011 20 l
150.066681 20.08 149.566681 20.120001 148.980011 20.120001 c
148.393341 20.120001 147.900009 20.08 147.500015 20 c
147.500015 6.4 l
148.006683 6.28 148.616684 6.22 149.330017 6.22 c
150.04335 6.22 150.680023 6.26 151.240021 6.34 c
154.340027 13.48 l
154.900024 14.799999 155.313354 15.813333 155.580032 16.52 c
155.660034 16.479999 l
155.500031 14.626666 155.420029 12.66 155.420029 10.58 c
155.420029 8.139999 l
155.420029 7.446666 155.560028 6.949999 155.840027 6.65 c
156.120026 6.35 156.573364 6.2 157.200027 6.2 c
158.260025 6.2 l
158.259995 6.2 l
h
166.600006 8.98 m
166.62001 10.459999 l
166.62001 20 l
166.166687 20.08 165.626678 20.120001 165.000015 20.120001 c
164.373352 20.120001 163.84668 20.08 163.420013 20 c
163.420013 8.98 l
162.140015 9 l
160.080017 9 l
160.000015 8.613334 159.960022 8.17 159.960022 7.67 c
159.960022 7.17 160.000015 6.726667 160.080017 6.34 c
169.98001 6.34 l
170.08669 6.686667 170.14001 7.106667 170.14001 7.6 c
170.14001 8.093333 170.00668 8.45 169.74002 8.67 c
169.47336 8.89 169.04669 9 168.46002 9 c
167.88002 9 l
166.620026 8.98 l
166.600021 8.98 l
166.600006 8.98 l
h
182.24001 6.34 m
182.24001 14.96 l
182.24001 16.666668 181.77335 17.983334 180.84001 18.91 c
179.90668 19.836666 178.57335 20.299999 176.84001 20.299999 c
175.10667 20.299999 173.77 19.836666 172.83002 18.91 c
171.89003 17.983334 171.42003 16.666668 171.42001 14.96 c
171.42001 6.34 l
171.56001 6.2 l
172.74001 6.2 l
174.00667 6.2 174.64 6.88 174.64 8.24 c
174.64 15 l
174.64 15.933333 174.80667 16.626667 175.14 17.08 c
175.47333 17.533333 176.03999 17.76 176.84 17.76 c
177.64 17.76 178.20667 17.533333 178.53999 17.08 c
178.87332 16.626667 179.03999 15.933333 179.03999 15 c
179.03999 6.34 l
179.45332 6.26 179.98666 6.22 180.64 6.22 c
181.28 6.22 181.81334 6.26 182.24001 6.34 c
h
194.88 10.56 m
194.88 11 194.81334 11.416667 194.68001 11.81 c
194.54668 12.203334 194.37001 12.556667 194.15001 12.870001 c
193.93001 13.183334 193.67001 13.456668 193.37001 13.690001 c
193.07001 13.923333 192.76001 14.1 192.44002 14.22 c
193.13335 14.473333 193.64668 15.086667 193.98001 16.06 c
194.58002 17.76 l
194.80669 18.426666 195.14001 18.92 195.58002 19.24 c
195.38002 19.506666 195.08002 19.73 194.68002 19.91 c
194.28003 20.09 193.84003 20.18 193.36002 20.18 c
192.88 20.18 192.50667 20.043333 192.24002 19.77 c
191.97337 19.496668 191.7267 19.02 191.50002 18.34 c
190.78001 16.24 l
190.63335 15.839999 190.43668 15.533333 190.19002 15.32 c
189.94336 15.106667 189.57335 15 189.08002 15 c
188.26001 15 l
188.26001 20 l
187.83334 20.08 187.3 20.120001 186.66 20.120001 c
186.02 20.120001 185.49333 20.08 185.08 20 c
185.08 6.44 l
185.22 6.3 l
186.38 6.273333 187.35667 6.253333 188.14999 6.24 c
188.94331 6.226667 189.56665 6.22 190.01999 6.22 c
190.75333 6.22 191.42 6.31 192.01999 6.49 c
192.61998 6.67 193.12999 6.94 193.54999 7.3 c
193.96999 7.66 194.29666 8.113333 194.52998 8.66 c
194.76331 9.206666 194.87997 9.839999 194.87999 10.56 c
194.88 10.56 l
h
188.25999 8.62 m
188.25999 12.54 l
188.85999 12.54 189.37332 12.53 189.79999 12.51 c
190.22665 12.490001 190.56999 12.410001 190.82999 12.270001 c
191.08998 12.13 191.28665 11.933333 191.41998 11.68 c
191.55331 11.426667 191.61998 11.06 191.61998 10.58 c
191.61998 9.286666 190.99332 8.639999 189.73997 8.639999 c
188.90997 8.639999 l
188.90997 8.639999 188.69331 8.633332 188.25998 8.619999 c
188.25999 8.62 l
h
200.52 15.96 m
200.5 17.4 l
200.5 17.42 l
201.11333 17.393333 201.60666 17.379999 201.98 17.379999 c
206.62 17.379999 l
206.62 17.873333 206.59999 18.253332 206.56 18.519999 c
206.39999 19.546665 205.72 20.059998 204.52 20.059998 c
199.2 20.059998 l
198.62666 20.059998 198.17667 19.893332 197.84999 19.559998 c
197.52332 19.226664 197.35999 18.773331 197.35999 18.199997 c
197.35999 6.479997 l
197.49998 6.339997 l
206.11998 6.339997 l
206.19998 6.726664 206.23997 7.146663 206.23997 7.599997 c
206.23997 8.05333 206.14664 8.526664 205.95998 9.019997 c
200.49997 9.019997 l
200.51997 10.459997 l
200.51997 11.859997 l
200.86664 11.846664 201.31998 11.839996 201.87997 11.839996 c
204.93997 11.839996 l
205.05997 12.21333 205.11996 12.639997 205.11996 13.119996 c
205.11996 13.599996 205.05997 14.039995 204.93997 14.439996 c
200.51997 14.439996 l
200.51997 15.959995 l
200.52 15.96 l
h
207.62 18.82 m
207.65999 18.379999 207.79666 17.940001 208.03 17.5 c
208.26334 17.059999 208.54001 16.700001 208.86 16.42 c
210.28667 17.286667 211.64 17.719999 212.92 17.719999 c
213.48 17.719999 213.89 17.593332 214.14999 17.34 c
214.40999 17.086668 214.53999 16.773334 214.53999 16.4 c
214.53999 15.773333 214.12 15.28 213.28 14.92 c
210.92 13.92 l
210 13.506667 209.29333 13.01 208.8 12.43 c
208.30667 11.85 208.06001 11.113334 208.06 10.22 c
208.06 9.606667 208.18333 9.046667 208.42999 8.54 c
208.67665 8.033333 209.02332 7.593333 209.46999 7.22 c
209.91666 6.846666 210.44666 6.556666 211.05998 6.35 c
211.67331 6.143333 212.35332 6.04 213.09998 6.04 c
214.59331 6.04 216.09998 6.42 217.61998 7.18 c
217.55331 8.206666 217.19331 9.006666 216.53998 9.58 c
215.17998 8.926667 213.97998 8.6 212.93997 8.6 c
212.40663 8.6 212.00664 8.72 211.73997 8.96 c
211.47331 9.2 211.33998 9.473333 211.33998 9.78 c
211.33998 10.299999 211.73331 10.719999 212.51997 11.04 c
214.91997 12.06 l
215.9333 12.486667 216.68997 13.033333 217.18997 13.7 c
217.68997 14.366667 217.93997 15.14 217.93997 16.02 c
217.93997 16.646668 217.82664 17.220001 217.59998 17.74 c
217.37331 18.259998 217.03665 18.709999 216.58998 19.09 c
216.14331 19.470001 215.58665 19.766668 214.91998 19.98 c
214.25331 20.193331 213.47331 20.299997 212.57999 20.299999 c
210.84665 20.299999 209.19331 19.806665 207.61998 18.82 c
207.62 18.82 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
